{"version":3,"sources":["Utils/profile.png","Utils/shopee-logo.png","Utils/ninjavan-logo.png","Utils/alphalab-logo.png","Utils/nus-crest.png","Utils/ama.png","Utils/four-five-foe.png","Utils/sweechat.png","Utils/peggle.png","styling/styling.js","component/HContainer.js","component/HBlob.js","component/Introduction.js","component/About.js","component/Contact.js","component/HNavbar.js","component/ExperienceTimeline.js","component/Experience.js","component/Projects.js","Components/App.js","index.js"],"names":["module","exports","useStyle","makeStyles","friend","color","hai","bigContainer","minHeight","padding","HContainer","props","big","duration","triggerOnce","Container","id","maxWidth","style","Box","display","flexDirection","justifyContent","children","HBlob","delay","className","viewBox","width","xmlns","xmlnsXlink","version","show","transform","animation","d","fill","yoyo","repeat","paused","component","attr","TweenOne","plugins","push","SvgMorphPlugin","Intro","classes","useState","isDoneTyping","setIsDoneTyping","startDelay","avgTypingDelay","cursor","onTypingDone","Typography","variant","profilePic","margin","height","borderRadius","borderColor","borderWidth","boxShadow","About","marginY","Grid","container","direction","alignItems","spacing","item","xs","md","src","alt","m","Button","href","target","icon","fontSize","Contact","faFacebookF","faGithub","faEnvelope","faInstagram","faLinkedin","useStyles","paper","background","opacity","HideOnScroll","window","trigger","useScrollTrigger","undefined","Slide","appear","in","HNavbar","styles","buttons","map","sectionId","key","activeClass","to","spy","smooth","ButtonBase","innerWidth","isDesktop","setDesktop","isDrawerOpen","setDrawerOpen","updateMedia","useEffect","addEventListener","removeEventListener","AppBar","position","elevation","Toolbar","marginLeft","onClick","Drawer","anchor","open","onClose","MenuItem","logo","filter","chosenLogo","hoverover","ExperienceTimeline","jobIndex","setJobIndex","ninjavan","flexGrow","paddingX","paddingY","nus","shopee","alphalab","jobs","jobName","jobTitle","jobDesc","Experience","projects","pName","pDesc","website","img","imgFFF","techStack","imgAMA","imgSC","imgPG","card","backgroundColor","border","textColor","media","MediaCard","project","Card","CardActionArea","CardMedia","image","title","CardContent","gutterBottom","CardActions","tech","Circle","circleStyle","radius","Projects","projectIndex","setProjectIndex","IconButton","disabled","p","ChevronLeftOutlined","index","disableRipple","length","ChevronRightOutlined","themeDark","createTheme","palette","default","responsiveFontSizes","text","primary","typography","fontFamily","join","strong","App","ThemeProvider","theme","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e32df4c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.89b805fc.png\";","module.exports = __webpack_public_path__ + \"static/media/shopee-logo.25d408d7.png\";","module.exports = __webpack_public_path__ + \"static/media/ninjavan-logo.6ceda04f.png\";","module.exports = __webpack_public_path__ + \"static/media/alphalab-logo.69fa8eb7.png\";","module.exports = __webpack_public_path__ + \"static/media/nus-crest.de9bd388.png\";","module.exports = __webpack_public_path__ + \"static/media/ama.755ab6b6.png\";","module.exports = __webpack_public_path__ + \"static/media/four-five-foe.f227b58a.png\";","module.exports = __webpack_public_path__ + \"static/media/sweechat.0a9c413e.png\";","module.exports = __webpack_public_path__ + \"static/media/peggle.b7fea748.png\";","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles({ \n    friend: { color: \"#1338BE\" },\n    hai: { color: \"#FF69B4\" },\n    bigContainer: {minHeight: \"100vh\", padding: \"5vh\"}\n});\n\nexport default useStyle","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport { Fade } from \"react-awesome-reveal\";\n\nfunction HContainer(props) {\n    return (\n        <Fade big duration={3000} triggerOnce={true}>\n            <Container id={props.id} maxWidth=\"md\" style={props.style}>\n                <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                    {props.children}\n                </Box>\n            </Container>\n        </Fade>\n    );\n}\n\nexport default HContainer;\n","import React from \"react\";\nimport SvgMorphPlugin from 'rc-tween-one/lib/plugin/SvgMorphPlugin';\nimport TweenOne from 'rc-tween-one';\nimport { Fade } from \"react-awesome-reveal\";\nimport { Box } from \"@material-ui/core\"\nTweenOne.plugins.push(SvgMorphPlugin);\n\nexport default function HBlob(props) {\n    let animation = {\n        d: \"M115.4 -137.9C137.9 -92.9 136.4 -46.4 133.6 -2.8C130.8 40.8 126.6 81.6 104.1 118.4C81.6 155.2 40.8 188.1 -8.4 196.5C-57.5 204.8 -115 188.7 -151 151.9C-187 115 -201.5 57.5 -190.8 10.7C-180.1 -36.1 -144.1 -72.1 -108.1 -117.1C-72.1 -162.1 -36.1 -216.1 5.2 -221.2C46.4 -226.4 92.9 -182.9 115.4 -137.9\",\n        style: {fill: \"#993366\"},\n        yoyo: true, \n        repeat: -1, \n        duration: 3000,\n    }\n    return (\n        <Box display=\"flex\" justifyContent=\"center\" >\n            <Fade big delay={500} duration={2000} triggerOnce={true}>\n                <svg\n                    className=\"blob-motion\"\n                    id=\"visual\"\n                    viewBox=\"0 0 500 500\"\n                    width=\"80vw\"\n                    // height=\"540\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n                    version=\"1.1\"\n                    display={props.show} \n                    style={{padding: \"5vw\", maxWidth: \"600px\"}}\n                >\n                    <g transform=\"translate(250, 250)\">\n                        <TweenOne\n                            animation={animation}\n                            style={{ fill: '#6900CC' }}\n                            paused={false}\n                            component=\"path\"\n                            d=\"M148.7 -134.9C193.7 -103.7 231.9 -51.9 232.4 0.6C233 53 196.1 106.1 151.1 128.6C106.1 151.1 53 143 -4.4 147.4C-61.8 151.8 -123.5 168.5 -151.2 146C-178.8 123.5 -172.4 61.8 -172.8 -0.4C-173.1 -62.5 -180.3 -124.9 -152.6 -156.1C-124.9 -187.3 -62.5 -187.1 -5.3 -181.8C51.9 -176.5 103.7 -166 148.7 -134.9\"\n                            attr=\"attr\"\n                        />\n                    </g>\n                </svg>\n            </Fade>\n        </Box>\n    )\n}","import React, { useState } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport useStyle from \"../styling/styling\";\nimport HContainer from \"./HContainer\"\nimport Typist from 'react-typist';\nimport HBlob from './HBlob'\n\nfunction Intro() {\n    const classes = useStyle();\n    const [isDoneTyping, setIsDoneTyping] = useState(false)\n    return (\n        <HContainer >\n            <div className={classes.bigContainer}>\n                <Typist startDelay={500} avgTypingDelay={30} cursor={{show: false}} onTypingDone={() => setIsDoneTyping(true)}>\n                    <Typography variant=\"h2\">\n                        hello <p className={classes.friend}>world</p>,\n                        <br/>\n                        i'm <p className={classes.hai}>hai</p>.\n                    </Typography>\n                    <br/><br/>\n                    <Typography variant=\"h4\">\n                        i like to build systems and solve problems\n                    </Typography>\n                </Typist>\n                <HBlob show={isDoneTyping ? \"block\" : \"none\"}/>\n            </div>\n        </HContainer>\n        \n    );\n}\n\nexport default Intro;\n","import React from \"react\";\nimport { Button, Box, Grid, Typography } from \"@material-ui/core\";\nimport profilePic from \"../Utils/profile.png\";\nimport HContainer from \"./HContainer\"\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles({ \n    profilePic: { \n        margin: \"20px\",\n        height: \"200px\",\n        borderRadius: \"100px\",\n        borderColor: \"white\",\n        borderWidth: \"2\",\n        boxShadow: \"0px 0px 0px 5px rgba(255, 255, 255, 0.8)\",\n    }\n});\n\nfunction About() {\n    const classes = useStyle();\n    return (\n        <HContainer id=\"about\">\n            <Box marginY=\"30px\">\n                <Typography variant=\"h4\">\n                    about me\n                </Typography>\n            </Box>\n            <Grid container \n                direction=\"row\"\n                alignItems=\"center\"\n                spacing={2}>\n                <Grid item xs={12} md={4}>\n                    <img className={classes.profilePic} src={profilePic} alt=\"profile-pic\" />\n                </Grid>\n                <Grid item xs={12} md={8}>\n                    <Typography variant=\"h6\">\n                        I'm a senior year <b>Computer Science</b> ASEAN scholar from the <b>National \n                        University of Singapore</b>. I enjoy building robust,\n                        reliable, and scalable software engineering architectures.\n                        <br/><br/>\n                        I have experience working as a backend web engineer in large scale payments \n                        systems and high fequency trading platforms. I'm a quick learner and I'm \n                        always open to tackle new challenges.\n                    </Typography>\n                </Grid>\n                <Box m={2}/>\n                <Grid container direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    spacing={3}>\n                    <Grid container item xs={6} justifyContent=\"flex-end\">\n                        <Button variant=\"outlined\" color=\"inherit\" href=\"/resume.pdf\" target=\"_blank\">\n                            resume\n                        </Button>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Button variant=\"outlined\" color=\"inherit\" href=\"/transcript.pdf\" target=\"_blank\">\n                            transcript\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Box m={10}/>\n        </HContainer>  \n    );\n}\n\nexport default About;\n","import React from \"react\";\nimport { Box, Typography } from \"@material-ui/core\";\nimport HContainer from \"./HContainer\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebookF,\n  faGithub,\n  faInstagram,\n  faLinkedin,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles({ \n    icon: { \n        fontSize: \"40px\",\n        padding: \"15px\",\n        color: \"white\",\n        \"&:hover\": {\n            color: \"#cba8fe\"\n        }\n    },\n});\n\n\nexport default function Contact() {\n    const classes = useStyle()\n    return (\n        <HContainer>\n            <Box  marginY=\"30px\">\n                <Typography variant=\"h4\" id=\"contact\">\n                    contact me\n                </Typography>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                <a className={classes.icon}\n                href={\"https://www.facebook.com/profile.php?id=100033460157841\"}\n                target={\"_blank\"}\n                >\n                <FontAwesomeIcon icon={faFacebookF} />\n                </a>\n                <a className={classes.icon} href={\"https://github.com/helloImHai\"} target={\"_blank\"}>\n                <FontAwesomeIcon icon={faGithub} />\n                </a>\n                <a className={classes.icon} href={\"mailto:1503.hai.nguyen@gmail.com\"} target={\"_blank\"}>\n                <FontAwesomeIcon icon={faEnvelope} />\n                </a>\n                <a\n                className={classes.icon}\n                href={\"https://www.instagram.com/hainguyen__/\"}\n                target={\"_blank\"}\n                >\n                <FontAwesomeIcon icon={faInstagram} />\n                </a>\n                <a\n                className={classes.icon}\n                href={\"https://www.linkedin.com/in/helloimhai/\"}\n                target={\"_blank\"}\n                >\n                <FontAwesomeIcon icon={faLinkedin} />\n                </a>\n            </Box>\n        </HContainer>\n    );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Box, ButtonBase, List, Drawer, Slide, Button, MenuItem } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link } from \"react-scroll\";\n\nconst useStyles = makeStyles({\n    paper: {\n        background: 'black',\n        opacity: 0.8\n    }\n});\n\nfunction HideOnScroll(props) {\n    const { children, window } = props;\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\n\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            {children}\n        </Slide>\n    );\n}\n\nHideOnScroll.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n};\n\nfunction HNavbar(props) {\n    const styles = useStyles()\n    const buttons = [\"about\", \"experience\", \"projects\", \"contact\"].map((sectionId, key) => {\n        return <Box key={`navbar-item-${sectionId}-${key}`} m={3}>\n            <Link\n                activeClass=\"active\"\n                to={sectionId}\n                spy={true}\n                smooth={true}\n                duration={500}\n            >\n                <ButtonBase>\n                    <Typography>{sectionId}</Typography>\n                </ButtonBase>\n            </Link>\n        </Box>\n    })\n    const [isDesktop, setDesktop] = useState(window.innerWidth > 1000)\n    const [isDrawerOpen, setDrawerOpen] = useState(false)\n\n    const updateMedia = () => {\n        setDesktop(window.innerWidth > 1000);\n    };\n    \n    useEffect(() => {\n        window.addEventListener(\"resize\", updateMedia);\n        return () => window.removeEventListener(\"resize\", updateMedia);\n    });\n    \n    return (\n        <HideOnScroll {...props}>\n            <AppBar position=\"sticky\" color=\"transparent\" elevation={0} >\n                <Toolbar style={{marginLeft: \"auto\"}}>\n                    { isDesktop \n                        ? buttons \n                        : <>\n                            <Button onClick={() => setDrawerOpen(true)}><MenuIcon/></Button>\n                            <Drawer anchor=\"left\" classes={{ paper: styles.paper}} open={isDrawerOpen} onClose={() => setDrawerOpen(false)}>\n                                <Box display=\"flex\" flexDirection=\"column\">\n                                    {\n                                        [\"about\", \"experience\", \"projects\", \"contact\"].map((sectionId, key) => {\n                                            return <Link\n                                                    activeClass=\"active\"\n                                                    to={sectionId}\n                                                    spy={true}\n                                                    smooth={true}\n                                                    duration={500}\n                                                    style={{\n                                                        margin: 20\n                                                    }}\n                                                >\n                                                    <MenuItem onClick={() => setDrawerOpen(false)}>\n                                                        <Typography>{sectionId}</Typography>\n                                                    </MenuItem>\n                                                </Link>\n                                        })\n                                    }\n                                </Box>\n                            </Drawer>\n                        </>\n                    }\n                </Toolbar>\n            </AppBar>\n        </HideOnScroll>\n    );\n}\n\nexport default HNavbar;\n","import React from 'react';\nimport shopee from '../Utils/shopee-logo.png'\nimport ninjavan from '../Utils/ninjavan-logo.png'\nimport alphalab from '../Utils/alphalab-logo.png'\nimport nus from '../Utils/nus-crest.png'\nimport { Box, ButtonBase, } from '@material-ui/core';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyle = makeStyles({ \n    logo: { \n        height: \"50px\",\n        filter: \"saturate(0.1)\"\n    },\n    chosenLogo: {\n        height: \"50px\"\n    },\n    hoverover: {\n        justifyContent: \"center\",\n        \"&:hover\": {\n            \"& $logo\": {\n                filter: \"saturate(1)\"\n            }\n        }\n    }\n});\n\nexport default function ExperienceTimeline(props) {\n    const classes = useStyle()\n    const { jobIndex, setJobIndex } = props\n    return (\n        <Box display=\"flex\" xs={12} m={3}>\n            <Box className={classes.hoverover}>\n                <ButtonBase onClick={() => setJobIndex(0)}>\n                    <img src={ninjavan} className={jobIndex == 0 ? classes.chosenLogo : classes.logo}/>\n                </ButtonBase>\n            </Box>\n            <Box flexGrow={1} paddingX={2} paddingY=\"18px\">\n                <hr />\n            </Box>\n            <Box className={classes.hoverover}>\n                <ButtonBase onClick={() => setJobIndex(1)}>\n                    <img src={nus} className={ jobIndex == 1 ? classes.chosenLogo : classes.logo}/>\n                </ButtonBase>\n            </Box>\n            <Box flexGrow={1} paddingX={2} paddingY=\"18px\">\n                <hr />\n            </Box>\n            <Box className={classes.hoverover}>\n                <ButtonBase onClick={() => setJobIndex(2)}>\n                    <img src={shopee} className={jobIndex == 2 ? classes.chosenLogo : classes.logo} \n                    style={jobIndex == 2 ? {filter: \"saturate(100%)\"} : {}}/>\n                </ButtonBase>\n            </Box>\n            <Box flexGrow={1} padding={2} paddingY=\"18px\"><hr/></Box>\n            <Box className={jobIndex == 3 ? classes.chosenLogo : classes.hoverover}>\n                <ButtonBase onClick={() => setJobIndex(3)}>\n                    <img src={alphalab} className={classes.logo} \n                    style={jobIndex == 3 ? {filter: \"saturate(180%)\"} : {}}/>\n                </ButtonBase>\n            </Box>\n        </Box>\n  );\n}","import React, { useState } from \"react\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport HContainer from \"./HContainer\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ExperienceTimeline from \"./ExperienceTimeline\";\nimport useStyle from \"../styling/styling\";\n\nconst jobs = [\n    {\n        jobName: \"Ninja Van\",\n        jobTitle: \"Backend Engineer Intern\",\n        jobDesc: \"Transitioned the backend microservices in Ninja Van to communicate through asynchronous pub-sub. Implemented new notifications for shippers and consignees.\",\n    },\n    {\n        jobName: \"National University of Singapore\",\n        jobTitle: \"Teaching Assistant\",\n        jobDesc: \"Led tutorials and labs to reinforce and consolidate new concepts discussed in lecture for various algorithm focused modules: Programming Methodology, Data Structure and Algorithms, and Design and Analysis of Algorithms.\",\n    },\n    {\n        jobName: \"Shopee\",\n        jobTitle: \"Payment Backend Engineer Intern\",\n        jobDesc: \"Contributed to sharding of wallets database to support the high payment load during campaigns. Implemented core logic and handling of wallet transactions to support user and merchant payments\",\n    },\n    {\n        jobName: \"AlphaLab Capital\",\n        jobTitle: \"Software Engineer Intern\",\n        jobDesc: \"Integrated new cryptocurrency exchanges to AlphaLab's high frequency trading architecture.\",\n    }\n]\n\nfunction Experience() {\n    const [jobIndex, setJobIndex] = useState(3)\n    const {jobName, jobTitle, jobDesc} = jobs[jobIndex]\n    const classes = useStyle()\n    return (\n        <HContainer id=\"experience\">\n            <Box marginY=\"30px\">\n                <Typography variant=\"h4\">\n                    work experience\n                </Typography>\n            </Box>\n            <Grid container \n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"flex-start\"\n                spacing={2}>\n                <Grid item xs={12}>\n                    <ExperienceTimeline jobIndex={jobIndex} setJobIndex={setJobIndex}/>\n                </Grid>\n                <Grid container item xs={12} md={3} direction=\"column\" justifyContent=\"flex-start\">\n                    <Grid item>\n                        <Typography variant=\"h5\" className={classes.hai}>\n                            <b>{jobName}</b>\n                        </Typography>\n                    </Grid>\n                    <Grid item>\n                        <Typography variant=\"h6\">\n                            {jobTitle}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} md={9}>\n                    <Typography variant=\"h6\" >\n                        {jobDesc}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Box m={10}> <p> </p></Box>\n        </HContainer>  \n    );\n}\n\nexport default Experience;\n","import React, { useState } from \"react\";\nimport { Box, ButtonBase, Typography, IconButton } from \"@material-ui/core\";\nimport HContainer from \"./HContainer\"\nimport { ChevronLeftOutlined, ChevronRightOutlined } from '@material-ui/icons';\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\nimport \"../Styles/Components/Projects/Projects.css\";\nimport imgAMA from \"../Utils/ama.png\";\nimport imgFFF from \"../Utils/four-five-foe.png\";\nimport imgSC from \"../Utils/sweechat.png\";\nimport imgPG from \"../Utils/peggle.png\";\n\n\nconst projects = [\n    {\n        pName: \"Four Five Foe\",\n        pDesc: \"Real time online multiplayer game I built based on a tic-tac-toe variant I used to play when I was a kid.\",\n        website: \"https://helloimhai.github.io/four-five-foe/\",\n        img: imgFFF,\n        techStack: ['react', 'express', 'websockets']\n    },\n    {\n        pName: \"Ask Hai Anything\",\n        pDesc: \"A single user Ask Me Anything website with working notifications! Ask me questions and find out more about me.\",\n        website: \"https://helloimhai.github.io/tells-v2/\",\n        img: imgAMA,\n        techStack: ['react', 'firebase', 'psql']\n    },\n    {\n        pName: \"Sweechat\",\n        pDesc: \"End-to-end encrypted IOS messaging app that caters to educational institutions built in 3 shorts sprints.\",\n        website: \"https://uvents.nus.edu.sg/event/18th-steps/module/CS3217/project/3\",\n        img: imgSC,\n        techStack: ['swift', 'firebase', 'authentication']\n    },\n    {\n        pName: \"Demon Slayer Peggle\",\n        pDesc: \"IOS arcade game with in-house physics and game engines. Gameplay is based on Peggle, theme is based on Demon Slayer.\",\n        website: \"https://www.youtube.com/watch?v=au8JBMnx56U\",\n        img: imgPG,\n        techStack: ['swift']\n    },\n]\n\nfunction Projects() {\n    const [projectIndex, setProjectIndex] = useState(0)\n    return (\n        <HContainer id=\"projects\">\n            <Box marginY=\"30px\">\n                <Typography variant=\"h4\">\n                    featured projects\n                </Typography>\n            </Box>\n            <Box display=\"flex\" flexDirection=\"column\" >\n                <MediaCard\n                    project={projects[projectIndex]}\n                />\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\">\n                <IconButton \n                    color=\"inherit\" \n                    disabled={projectIndex == 0} \n                    onClick={() => setProjectIndex(p => p - 1)}> \n                    <ChevronLeftOutlined/> \n                </IconButton>\n                {\n                    projects.map((p, index) => (\n                        <ButtonBase disableRipple onClick={() => setProjectIndex(index)}>\n                            <Circle \n                                backgroundColor={projectIndex == index ? \"red\" : null}\n                                radius={projectIndex == index ? 10 : 7}\n                            />\n                        </ButtonBase>\n                    ))\n                }\n                <IconButton \n                    color=\"inherit\" \n                    disabled={projectIndex == projects.length - 1} \n                    onClick={() => setProjectIndex(p => p + 1)}> \n                    <ChevronRightOutlined/> \n                </IconButton>\n            </Box>\n            <Box m={5}></Box>\n        </HContainer>  \n    );\n}\n\nconst useStyles = makeStyles({\n    card: {\n      width: \"100%\",\n      margin: \"10px\",\n      backgroundColor: \"rgb(31, 32, 44)\",\n      border: \"10px solid rgb(31, 32, 44)\",\n      textColor: \"rgb(240, 240, 240)\",\n    },\n    media: {\n      height: 350,\n      opacity: \"80%\",\n    },\n  });\n  \n\nfunction MediaCard({project}) {\n    const classes = useStyles();\n    const { pName, pDesc, website, img, techStack } = project\n    return (\n      <Card className={classes.card}>\n        <CardActionArea href={website} target=\"_blank\">\n          <CardMedia className={classes.media} image={img} title={pName} />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h5\">\n              {pName}\n            </Typography>\n            <Typography style={{ color: \"rgb(220, 220, 220)\" }}>\n              {pDesc}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n            {\n                techStack.map((tech, id) => (\n                    <ButtonBase style={{marginLeft: \"15px\"}}>\n                        <Typography>\n                            {tech}\n                        </Typography>\n                    </ButtonBase>\n                ))\n            }\n        </CardActions>\n      </Card>\n    );\n}\n\nfunction Circle(props) {\n    var circleStyle = {\n        margin:20,\n        display:\"inline-block\",\n        backgroundColor: props.backgroundColor || \"white\",\n        borderRadius: \"50%\",\n        width: props.radius || 7,\n        height: props.radius || 7, \n      };\n      return (\n        <div style={circleStyle}/>\n      );\n}\n\nexport default Projects;\n","import React from \"react\";\nimport Intro from \"../component/Introduction\";\nimport About from \"../component/About\";\nimport Contact from \"../component/Contact\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider, createTheme, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport HNavbar from \"../component/HNavbar\";\nimport Experience from \"../component/Experience\";\nimport Projects from \"../component/Projects\";\n\nconst themeLight = createTheme({\n  palette: {\n    background: {\n      default: \"#e4f0e2\"\n    }\n  }\n});\n\nconst themeDark = responsiveFontSizes(createTheme({\n    palette: {\n        background: {\n            default: \"#222222\"\n        },\n        text: {\n            primary: \"#ffffff\"\n        }\n    },\n    typography: {\n        fontFamily: ['\"Roboto Mono\"', 'monospace'].join(','),\n        strong: {\n            color: \"#2882F8\",\n        }\n    }\n}));\n\nfunction App() {\n  return (\n    <div>\n        <ThemeProvider theme={themeDark}>\n            <CssBaseline />\n            <HNavbar />\n            <Intro />\n            <About />\n            <Experience />\n            <Projects />\n            <Contact />\n        </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Styles/index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}